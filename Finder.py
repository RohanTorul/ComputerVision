import numpy as np
from detect_ir import HotspotDetector
from pyproj import Transformer
import cv2
from mpi import MissionPlannerInterface
import time
import simplekml
import pickle
class CoordinateTransformer:
    def __init__(self):
        self.transformer = None
        self.inverse_transformer = None

    def init_transformer(self, lat0, lon0):
        """
        Initializes pyproj transformers for converting between local meters and GPS.
        """
        proj_string = f"+proj=tmerc +lat_0={lat0} +lon_0={lon0} +datum=WGS84"
        self.transformer = Transformer.from_crs("epsg:4326", proj_string, always_xy=True)
        self.inverse_transformer = Transformer.from_crs(proj_string, "epsg:4326", always_xy=True)

    def generate_path(self, target_position, path_relative = []):
        """
        target_position: (latitude, longitude)
        Returns: list of (lat, lon) tuples
        """
        lat0, lon0 = target_position
        self.init_transformer(lat0, lon0)

        path_gps = []
        for x, y in path_relative:
            lon, lat = self.inverse_transformer.transform(x, y)
            path_gps.append((lat, lon))

        return path_gps


class UAV_GROUND_PERCEPTION:
    def __init__(self,Source_of_fire_coordinate = None,source_description = None,position = (0,0),fov = 60):
        if Source_of_fire_coordinate is None:
            print("missing source of fire coordinate")
            return None
        if source_description is None:
            print("missing source of fire description")
            return None
        # KML STUFF
        self.kml = simplekml.Kml()
        self.firesource_point = self.kml.newpoint(name="source", coords = [Source_of_fire_coordinate])
        self.firesource_point.description = source_description
        self.kml.save("Task1.kml")

        self.Source_of_fire_coordinate = Source_of_fire_coordinate
        self.position = position
        self.altitude = 0. # altitude of the Valkie
        self.vision_output = []
        self.alpha = 0.
        self.fov = fov # field of view of the camera
        self.Ir_detector = HotspotDetector(camera_index= 4) #change cameraindex until it works ig.
        self.MPI = MissionPlannerInterface() # TODO: define the mission planner interface
        self.potentially_invalid_frames = []
        self.previous_STAT = ""


        self.hotspot_coordinates = set()

        
    def are_within_range(tuple1, tuple2, tolerance=0.0001):
        lat1, lon1 = tuple1
        lat2, lon2 = tuple2
    
        # Check if the absolute difference between latitudes and longitudes is within tolerance
        lat_diff = abs(lat1 - lat2)
        lon_diff = abs(lon1 - lon2)
    
        return lat_diff <= tolerance and lon_diff <= tolerance
    

    
    def CV_GetVisionOutput(self):
        frame = self.Ir_detector.return_valid_frame_blocking()
        return frame
    
    def Mission_Planner_Get_Uav_Position(self):
        return self.MPI.get_data('GPS')  # Assuming 'GPS' is the key for position data
    
    # "STAT:1..;POS:(lat,lon);ALT:altitude;\n"

    def update(self): #SEE HERE
        self.MPI.mavlink_step()
        dict = self.MPI.mavlink_dict
        if dict:
            current_STAT = dict["STAT"] if "STAT" in dict.keys() else self.previous_STAT
            print("current_STAT: ",current_STAT)
            if current_STAT != self.previous_STAT:
                self.previous_STAT = current_STAT
                if current_STAT == "0":
                    return -4
                elif current_STAT == "1":
                    self.altitude = dict["ALT"] if "ALT" in dict.keys() else None
                    self.position = dict["POS"] if "POS" in dict.keys() else None
                    if self.position and self.altitude:
                        self.position = self.position.split(',')
                        frame = self.CV_GetVisionOutput()
                        if frame is None:
                         print("No valid frame available yet.")
                         self.potentially_invalid_frames.append((self.Ir_detector.return_frame(), self.altitude,  (str(float(self.position[0])/10000000), str(float(self.position[1])/10000000))))
                         return -6
                        self.position = (str(float(self.position[0])/10000000), str(float(self.position[1])/10000000))
                    
                        self.vision_output.append((frame, self.altitude, (self.position[0], self.position[1])))
                        current_hotspot_count = len(self.hotspot_coordinates)
                        new_hotspots_location = set()
                        new_hotspots_location = (self.process_single_frame(self.vision_output[-1]))
                        if len(new_hotspots_location) > 0:
                            for hotspot in new_hotspots_location:
                                self.hotspot_coordinates.add(hotspot)
                                if len(self.hotspot_coordinates) > current_hotspot_count:
                                    current_hotspot_count = len(self.hotspot_coordinates)
                                    new_hotspot_point = self.kml.newpoint(name=f"Hotspot {current_hotspot_count}", coords = [(hotspot[1], hotspot[0])])
                                    new_hotspot_point.altitudemode = simplekml.AltitudeMode.clamptoground
                                    self.kml.save("Task1.kml")

                    else:
                        return -5
                elif current_STAT == "X":
                    return -1
            else:
                if current_STAT == "1" or current_STAT == "X":
                    return -3
                else:
                    return -4
        else:
            return -2
        
      

    def process_single_frame(self, composite_frame): #SEE HERE
        frame, alt, pos = composite_frame
        hotspot_locations = set()
        max_contrast = 40
        processed_contours = []
        processed_frame = []
        for contrast_threshold in range(0, max_contrast, 5):
            _,c,_ = self.Ir_detector.detect_hotspots(frame,min_area=4.5,max_area = 100, intensity_percentile = 99.5,contrast_threshold=contrast_threshold,circularity_threshold=0.8)
            if c is None or len(c) == 0:
                continue
            else:
                processed_contours.append(c) 
                #processed_frame.append(f)
        if processed_contours is None or len(processed_contours) == 0:
            return set()
        X_dimension, Y_dimension, _ = frame.shape
        for contour in c:
            x, y, w, h = cv2.boundingRect(contour)
            chunk_length_half = float(alt)* np.tan(np.radians(self.fov/2)) # TODO: check if this is correct#
            coordinate_transformer = CoordinateTransformer()
            coordinate_transformer.init_transformer((pos[0]), pos[1])
            x_distance = (x - X_dimension / 2) * chunk_length_half / X_dimension
            y_distance = (y - Y_dimension / 2) * chunk_length_half / Y_dimension
            lon, lat = coordinate_transformer.inverse_transformer.transform(x_distance, y_distance)
            if lat is None or lon is None:
                continue
            hotspot_locations.add((lat, lon))

        return hotspot_locations

    def post_process(self):
        """
        Post-process the vision output to extract relevant information.
        """
        hotspot_locations= []

        for composite_frame in self.vision_output:
            hotspot_locations.extend(self.process_single_frame(composite_frame))    

        return hotspot_locations

    
        
        # Label detected hotspots with their sector

def mouse_callback(event, x, y, flags, param):
    if event == cv2.EVENT_LBUTTONDOWN:
        alt,pos = param
        chunk_length_half = float(alt)* np.tan(np.radians(60/2)) # TODO: check if this is correct#
        coordinate_transformer = CoordinateTransformer()
        coordinate_transformer.init_transformer(pos[0], pos[1])
        x_distance = (x - 640 / 2) * chunk_length_half / 640
        y_distance = (y - 480 / 2) * chunk_length_half / 480
        lon, lat = coordinate_transformer.inverse_transformer.transform(x_distance, y_distance)
        print(f"Clicked coordinates: x={x}, y={y}")
        print(f"Clicked coordinates: x={lon}, y={lat}")

def main(source_coordinates, Source_description):
    """
    Main function to run the UAV_GROUND_PERCEPTION class.
    """
    # Initialize the UAV_GROUND_PERCEPTION class
    uav_perception = UAV_GROUND_PERCEPTION(source_description=Source_description, Source_of_fire_coordinate=source_coordinates) # SEE HERE
    if uav_perception is None:
        print("Unable to initialize UAV_GROUND_PERCEPTION")
        return
    # Update the Valkie perception system
    while True:
        update_output = uav_perception.update()
        if update_output == -1:
            print("Valkie returning to base")
            break
        if update_output == -2:
            print("Dict not available")
            continue
        if update_output == -3:
            print("Valkie is on the same target as before")
            continue
        if update_output == -4:
            print("Valkie is moving to a target")
            continue
        if update_output == -5:
            print("unable to get Valkie's position or altitude")
            continue
        if update_output == -6:
            print("No valid frame available")
            continue

    print("Hotspot locations:",uav_perception.post_process())
    data = {
        "vision_output": uav_perception.vision_output,
        "potentially_invalid_frames": uav_perception.potentially_invalid_frames
    }
    with open(f"data_{str(time.strftime('%Y%m%d%H%M%S', time.localtime()))}.pkl", "wb") as f:
        pickle.dump(data, f)
        print("Data saved to data_<time>.pkl")


    while True:
        if len(uav_perception.potentially_invalid_frames) == 0 and len(uav_perception.vision_output) == 0:
            break
        index_valid = 0
        index_invalid = 0
        if len(uav_perception.potentially_invalid_frames) > 0:
            frame_invalid, alt_invalid, pos_invalid = uav_perception.potentially_invalid_frames[index_invalid]
            cv2.imshow(f"Invalid hotspot locations {alt_invalid},{pos_invalid}", frame_invalid)
            cv2.setMouseCallback(f"Invalid hotspot locations {alt_invalid},{pos_invalid}", mouse_callback,(alt_invalid, pos_invalid))

        if len(uav_perception.vision_output) > 0:
            frame_valid, alt_valid, pos_valid = uav_perception.vision_output[index_valid]
            cv2.imshow(f"Valid Hotspot locations {alt_valid},{pos_valid}", frame_valid)
            cv2.setMouseCallback(f"Valid Hotspot locations {alt_valid},{pos_valid}", mouse_callback,(alt_valid, pos_valid))
        
        if cv2.waitKey(1) & 0xFF == ord('q'):
            cv2.destroyAllWindows()
            break
        if cv2.waitKey(1) & 0xff == 32:
            print("next valid frame")
            index_valid = (index_valid + 1)
            if index_valid == len(uav_perception.vision_output):
                index_valid = 0
        if cv2.waitKey(1) & 0xff == 13:
            print("next invalid frame")
            index_invalid = index_invalid + 1
            if index_invalid >= len(uav_perception.potentially_invalid_frames):
                index_invalid = 0

    # Print the current position and vision output
    
    print("Vision Output:", uav_perception.vision_output)
    

if __name__ == "__main__":

    main((-110.738011,50.101298,),"Drone Crashed") #PARAMS HERE








    print(r""" -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%@#::-----------------------.#@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@#.:------------------=::%@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%@. ........................ .@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@. ..................... :@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%@@@*..-================-..#@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@%..-============+:..@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@..-===============..@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@..============-.-@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@:.-=============-.@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@.-==========:.*@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%@@:.-============:.@@#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@::=========-.+@@#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%@@..============-.@@%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@.-======+-=.:@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@.:===-=======-.=@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@#.:========..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@*.--=+========:.*@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@ :+=-===+=..%@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%@@=.-===========:.@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@.:=======--.#@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..-===========..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..-=======:.=@@%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..============.:@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@-.-=======-..@@%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@ :===========-.=@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@*.-========..@@%%%%%%%%%%%%%%%%%%%%@@@@@@@@%@%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@.-===========:.*@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@.:========..@@%%%%%%%%%%%%%@@@@@@@@@@@-... :@%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@*.-===========-.@@@%%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%@@..-=======:.@@@%%%%%%#%@@@@@@@@@+...  .%@-.@@@%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@-.-===========..@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..-===-+==:.%@@#%%%%%%%%%...........*@@@:..@@@%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..-===========..@@%%%%%%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@=.-====+-=-.+@@%%%%%%%%%%@@......:@@@@#...-@@@%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..-==========-..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@*.-=======-.:@@%%%%%%%%%%%%@@@=#@@@@@.....%@@%%#%#%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@.:===========-.=@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@.:========..@@%%%%%%%%%%%%%%%@+@@@:...:. @@@%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@*.:===========:.#@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@.:=======-:.@@@%%%%%%%%%%%%%%%@--.=..::..@@%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@=.-===========:.@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..-=======-.%@@%%%%%%%%%%%@@@@%#%@@@@# .+@@@%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..========-=+-..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@-.-+======-.=@@%%%%%%%%@@@@@-:+#%%%%%@@@@@@%#%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..===-========..@@%%%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@*.-========..@@%%%#%%@@@@#-.:+@@%%%%%%%@@@@%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@ :-=+==-======..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@.:--+===--..@@%%%@@@@@+:..=%@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@.:=-===-+====:.=@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..========..@@%@@@@@-:.:-+@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@*.-====+-=====-.%@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..-=====--..@@@@@=:::::=@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@-.-===========..@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@-.-===---:..@@#::--:--%@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..==========-=..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@#.--::::.=#@@*=-==--*@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@..-==========-.:@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@..:.:=#@@@**+=-::+@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@%.:-==========-.+@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@ .+#@@@#++==-::*@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@%@@+.-===========:.#@@%%%%%%%%%%%%%%%%#%%%%%%%@@@@@@+#@%**+=++=:-*@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@-.-===========:.@@@%%%%%%%%%%%%%%%%%%%@@@@@@@+::--=++=+*#%-@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@#=:.....   .++#@@..-==========-..@@%%%%%%%%%%%%%%@@@@@@@*-...:-=++==*%@@+.:@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@%-              .:*@@%%@@..===+========..@@%%%%%%%%@@@@@@@%=...::-+=====*%@%+-:..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%#@@@@#     ...     =@@@@@@@@@%%%%@@..============..@@@@@@@@@@@#=....:-=++=+-=+#@@#+-:::..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%@@@    .:--.  :@@@@@@@@%%%%%%%%%%@@@.:-========--:.:@@@@@*:.....:-==++=-...#%%*=------..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%@@   .-----:-%@@@@@@%%%%%%%%%%%%%%%@@%.:=--::.:--*#@*+.....:--==+==-:....#@@@:-----=-=:.@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%@  --------:=@@@@@@@@@@@@@@@@@@@@@@@@@.-=%@@@@@#+=-:::--===+==:....:%@@@@@#.:-=--===:.*@@%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%@@   .--:---:.   .=%@@@@@@@@@@@@@@@%#*###+=-:..::--=-=====-.....=@@@@@@@@@@..==-====-.-@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%@@@   .--:---::..                 .....:-----======-:... .-@@@@@@@%%%%%@@.:========..@@%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%#%%@@@-   ..:::------::::::::------======-===-::....-*@@@@@@@@%%%%%%%%%@@..+-=+=-=-..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@      ..:---------=------:::...    .:+%@@@@@*=.@@@%%%%%%%%%%@@-.-+======: @@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@%.                       .+@@@@@@@#*+-:---..@@@%%%%%#%%@@*.:+-=====:.@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#.:---:-------. @@%%%%%%%@@@.:-=====--.+@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%@@@@@@@@@@@%%%%%%%%%%@@+.:--=-=======..@@%%%%%%@@..=======-.-@@#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@:.-==========-..@@%%%%@@:.-=======..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@:.-==========-.=@@%%@@=.-=======..@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@..=========-=:.#@@@@#.:=======:.%@@#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@.:========+==..@@@@.:=======-.+@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@*.:===========..@@.:========.-@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@+.-==========-.::.-=======..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@-.-==========---========..@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@:.-=============+=====: @@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..-=================:.@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@..================-.#@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@..-=============-.=@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@  -=#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@..============-..@@%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@%%%%%%%%%@@- @@@@@%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@%.:===========:.@@@#%#@%%@%%%%%%%%%%@%%%%@@%@# .@%@#%%%%%@@: @@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@*.:==-======:.%@@%%@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@#.@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@+.:=======-.+@@%%@@..@ .@@ **.# ...-=.@ =@ @@@.-% @= *+#.@@  @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%@@-.-===-=-.:@@%%@@ -@*.@@ =#%@= @@@=.@%.@ *@@ .*#@:.@@@:.@*.@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@:.:--:-..@@%%%@-.@%.@@ @@@@#.%@%@ @@.@*.@@.-@@@# @@*:.@@ @@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@.......@@%%%%@ .@# -@ -*-%-:@@%@ +:@@..#@..#-@% ::%-=@  @@%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@%%%%%@@@@@@@@@@@@@@@@%%@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-
 -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- """)
   